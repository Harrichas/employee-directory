{"version":3,"sources":["components/Col/index.js","components/Container/index.js","components/Wrapper/index.js","utils/API.js","components/SearchForm/index.js","components/Table/index.js","App.js","index.js"],"names":["Col","props","size","split","map","join","className","children","Container","style","Wrapper","axios","get","SearchForm","htmlFor","value","search","onChange","handleInputChange","name","list","type","onClick","handleFormSubmit","Table","event","setState","state","target","console","log","toggleSort","sort","sortByName","a","b","first","searchByFirstName","employee","toLowerCase","includes","employees","empList","API","then","res","data","results","rows","this","filter","src","picture","medium","alt","last","email","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+MAQeA,MANf,SAAaC,GACX,IAAMC,EAAOD,EAAMC,KAAKC,MAAM,KAAKC,KAAI,SAAAF,GAAI,MAAI,OAASA,KAAMG,KAAK,KAEnE,OAAO,qBAAKC,UAAWJ,EAAhB,SAAuBD,EAAMM,YCCvBC,MAJf,SAAmBP,GACjB,OAAO,qBAAKK,UAAU,YAAYG,MAAOR,EAAMQ,MAAxC,SAAgDR,EAAMM,Y,MCIhDG,MAJf,SAAiBT,GACf,OAAO,sBAAMK,UAAU,UAAhB,SAA2BL,EAAMM,Y,wDCC3B,EACC,WACZ,OAAOI,IAAMC,IAAI,iD,MCkBNC,MArBf,SAAoBZ,GAClB,OACE,sBAAMK,UAAU,SAAhB,SACE,sBAAKA,UAAU,aAAf,UACE,uBAAOQ,QAAQ,WAAf,qBACA,uBACEC,MAAOd,EAAMe,OACbC,SAAUhB,EAAMiB,kBAChBC,KAAK,SACLC,KAAK,YACLC,KAAK,OACLf,UAAU,iBAEZ,wBAAQe,KAAK,SAASC,QAASrB,EAAMsB,iBAAkBjB,UAAU,kBAAjE,0BCgGOkB,E,kDA3GX,aAAe,IAAD,8BACV,gBAkBJN,kBAAoB,SAAAO,GAChB,EAAKC,SAAL,2BAAmB,EAAKC,OAAxB,IAA+BX,OAAQS,EAAMG,OAAOb,SACpDc,QAAQC,IAAIL,EAAMG,OAAOb,QArBf,EAwBdgB,WAAa,WACT,EAAKL,SAAL,2BAAkB,EAAKC,OAAvB,IAA8BK,MAAO,EAAKL,MAAMK,SAzBtC,EA4BdC,WAAa,SAACC,EAAGC,GAMb,GAAG,EAAKR,MAAMK,KAAM,CAChB,GAAIE,EAAEf,KAAKiB,MAAQD,EAAEhB,KAAKiB,MACtB,OAAO,EAEX,GAAIF,EAAEf,KAAKiB,MAAQD,EAAEhB,KAAKiB,MACtB,OAAQ,MAET,CACH,GAAIF,EAAEf,KAAKiB,MAAQD,EAAEhB,KAAKiB,MACtB,OAAQ,EAEZ,GAAIF,EAAEf,KAAKiB,MAAQD,EAAEhB,KAAKiB,MACtB,OAAO,EAIf,OAAO,GAlDG,EAsDdC,kBAAoB,SAAAC,GACjB,OAAOA,EAASnB,KAAKiB,MAAMG,cAAcC,SAAS,EAAKb,MAAMX,OAAOuB,gBArDnE,EAAKZ,MAAQ,CACTc,UAAW,GACXC,QAAS,GACT1B,OAAQ,GACRgB,MAAM,GANA,E,qDASd,WAAoB,IAAD,OACfW,IAAmBC,MAAK,SAACC,GAErB,EAAKnB,SAAS,CACVe,UAAWI,EAAIC,KAAKC,QACpBL,QAASG,EAAIC,KAAKC,e,oBA4C9B,WACI,IAAMC,EAAOC,KAAKtB,MAAMc,UAAUT,KAAKiB,KAAKhB,YAAYiB,OAAOD,KAAKZ,mBAAmBjC,KAAI,SAASkC,GAChG,OACI,+BACI,6BACI,qBAAKa,IAAOb,EAASc,QAAQC,OAAQC,IAAI,eAE7C,6BACKhB,EAASnB,KAAKiB,QAEnB,6BACKE,EAASnB,KAAKoC,OAEnB,6BACKjB,EAASkB,UAXPlB,EAASkB,UAiB/B,OACD,gCACI,cAAC,EAAD,CAAQtC,kBAAmB+B,KAAK/B,oBACnC,wBAAOZ,UAAU,QAAjB,UACK,gCACI,+BACI,yCAGA,oBAAIgB,QAAS2B,KAAKlB,WAAlB,wBAGA,2CAGA,4CAKR,gCACGiB,c,GApGOS,IAAMC,WCgBXC,MAff,WACE,OAEI,8BACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAKzD,KAAM,KAAX,SACE,cAAC,EAAD,a,YCPd0D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.73e9c7b6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size}>{props.children}</div>;\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getEmployees: function() {\n    return axios.get('https://randomuser.me/api/?results=25&nat=us');\n  }\n};\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"employee\">Search:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"Search\"\n          list=\"employees\"\n          type=\"text\"\n          className=\"form-control\"\n        />\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport API from \"../../utils/API\"\nimport Search from \"../SearchForm\"\n\n\nclass Table extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            employees: [],\n            empList: [],\n            search: \"\",\n            sort: true, // true means ASC order, false means DESC order\n        }\n    }\n    componentDidMount(){\n        API.getEmployees().then((res) => {\n\n            this.setState({\n                employees: res.data.results,\n                empList: res.data.results\n            })\n        })\n    }\n\n    handleInputChange = event => {\n        this.setState({ ...this.state, search: event.target.value });\n        console.log(event.target.value);\n      };\n\n    toggleSort = () => {\n        this.setState({...this.state, sort: !this.state.sort})\n    }\n\n    sortByName = (a, b) => {\n        // console.log(this.state);\n        // const mapped = this.state.empList.map(function(el, i) {\n        // return { index: i, value: el.name.first.toLowerCase() };\n        // })\n        \n        if(this.state.sort) {\n            if (a.name.first > b.name.first) {\n                return 1;\n            }\n            if (a.name.first < b.name.first) {\n                return -1;\n            }\n        } else {\n            if (a.name.first > b.name.first) {\n                return -1;\n            }\n            if (a.name.first < b.name.first) {\n                return 1;\n            }\n        }\n            \n        return 0;\n        // });\n    }\n\n    searchByFirstName = employee => {\n       return employee.name.first.toLowerCase().includes(this.state.search.toLowerCase());\n    }\n    \n    render() {\n        const rows = this.state.employees.sort(this.sortByName).filter(this.searchByFirstName).map(function(employee){\n            return (\n                <tr key = {employee.email}>\n                    <td>\n                        <img src = {employee.picture.medium} alt=\"employee\"></img>\n                    </td>\n                    <td>\n                        {employee.name.first}\n                    </td>\n                    <td>\n                        {employee.name.last}\n                    </td>\n                    <td>\n                        {employee.email}\n                    </td>\n                </tr>\n            )\n        })\n\n     return( \n    <div>\n        <Search handleInputChange={this.handleInputChange}/>\n     <table className=\"table\">\n          <thead>\n              <tr>\n                  <td>\n                      Picture\n                  </td>\n                  <td onClick={this.toggleSort}>\n                    First Name\n                  </td>\n                  <td>\n                      Last Name\n                  </td>\n                  <td>\n                      Email\n                  </td>\n              </tr>\n          </thead>\n          <tbody>\n            {rows}\n          </tbody>\n      </table>\n    </div>\n    )}\n}\n\n\nexport default Table;","import React from \"react\";\nimport Col from \"./components/Col\";\nimport Container from \"./components/Container\";\nimport Wrapper from \"./components/Wrapper\";\nimport Table from \"./components/Table\";\n\nfunction App() {\n  return (\n    \n      <div>\n        <Wrapper>\n          <Container>\n            <Col size= \"12\">\n              <Table/>              \n            </Col>\n          </Container>\n        </Wrapper>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}